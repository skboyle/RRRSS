{"ast":null,"code":"var _jsxFileName = \"/Users/stevie/Desktop/Code/RRRSS/src/components/ItemList.jsx\";\nimport React from 'react';\nimport { Link } from 'react-router-dom';\nimport { updateItemReadStatus } from '../services/api';\nimport ReadButton from './ReadButton';\nimport FormatDate from './FormatDate';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ItemList = ({\n  items,\n  onUpdateItem\n}) => {\n  const handleUpdateReadStatus = async item => {\n    try {\n      // Update the item read status\n      const newReadStatus = item.read === 'Read' ? 'Unread' : 'Read';\n      const updatedItem = await updateItemReadStatus(item.id, newReadStatus, () => {});\n      // Call the onUpdateItem function to update the state\n      onUpdateItem(updatedItem);\n    } catch (error) {\n      console.error('Error updating read status:', error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        margin: 50,\n        textAlign: 'center',\n        alignContent: 'center'\n      },\n      children: \"/.Slashdot RSS Reader\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n      style: {\n        listStyleType: 'none',\n        margin: 'auto'\n      },\n      children: items && items.map(item => /*#__PURE__*/_jsxDEV(\"li\", {\n        style: {\n          margin: 10\n        },\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"card text-dark bg-light mb-3\",\n          style: {\n            maxWidth: '100rem'\n          },\n          children: [item.subject && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-header\",\n            children: [item.subject.charAt(0).toUpperCase() + item.subject.slice(1), \" : \", FormatDate(item.publication_date)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: `/feed_items/${item.id}`,\n            className: \"card-body\",\n            children: /*#__PURE__*/_jsxDEV(\"h2\", {\n              className: \"card-title\",\n              children: item.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 34,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"card-footer\",\n            children: /*#__PURE__*/_jsxDEV(ReadButton, {\n              item: item,\n              onUpdateRead: () => handleUpdateReadStatus(item)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this)\n      }, item.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 21\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_c = ItemList;\nexport default ItemList;\nvar _c;\n$RefreshReg$(_c, \"ItemList\");","map":{"version":3,"names":["React","Link","updateItemReadStatus","ReadButton","FormatDate","jsxDEV","_jsxDEV","ItemList","items","onUpdateItem","handleUpdateReadStatus","item","newReadStatus","read","updatedItem","id","error","console","children","style","margin","textAlign","alignContent","fileName","_jsxFileName","lineNumber","columnNumber","listStyleType","map","className","maxWidth","subject","charAt","toUpperCase","slice","publication_date","to","title","onUpdateRead","_c","$RefreshReg$"],"sources":["/Users/stevie/Desktop/Code/RRRSS/src/components/ItemList.jsx"],"sourcesContent":["import React from 'react';\nimport { Link } from 'react-router-dom';\nimport { updateItemReadStatus } from '../services/api';\nimport ReadButton from './ReadButton';\nimport FormatDate from './FormatDate';\n\nconst ItemList = ({ items, onUpdateItem }) => {\n    const handleUpdateReadStatus = async (item) => {\n        try {\n            // Update the item read status\n            const newReadStatus = item.read === 'Read' ? 'Unread' : 'Read';\n\n            const updatedItem = await updateItemReadStatus(item.id, newReadStatus, () => {});\n            // Call the onUpdateItem function to update the state\n            onUpdateItem(updatedItem);\n        } catch (error) {\n            console.error('Error updating read status:', error);\n        }\n    };\n\n    return (\n        <div>\n            <h1 style={{ margin: 50, textAlign: 'center', alignContent: 'center' }}>/.Slashdot RSS Reader</h1>\n            <ul style={{ listStyleType: 'none', margin: 'auto' }}>\n                {items && items.map(item => (\n                    <li key={item.id} style={{ margin: 10 }}>\n                        <div className=\"card text-dark bg-light mb-3\" style={{ maxWidth: '100rem' }}>\n                            {item.subject && (\n                                <div className=\"card-header\">\n                                    {item.subject.charAt(0).toUpperCase() + item.subject.slice(1)} : {FormatDate(item.publication_date)}\n                                </div>\n                            )}\n                            <Link to={`/feed_items/${item.id}`} className=\"card-body\">\n                                <h2 className=\"card-title\">{item.title}</h2>\n                            </Link>\n                            <div className=\"card-footer\">\n                                <ReadButton\n                                    item={item}\n                                    onUpdateRead={() => handleUpdateReadStatus(item)}\n                                />\n                                {/* <footer className=\"blockquote-footer\">{item.creator}</footer> */}\n                            </div>\n                        </div>\n                    </li>\n                ))}\n            </ul>\n        </div>\n    );\n};\n\nexport default ItemList;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}
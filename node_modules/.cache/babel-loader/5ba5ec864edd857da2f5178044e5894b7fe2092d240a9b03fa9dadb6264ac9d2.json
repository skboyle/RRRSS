{"ast":null,"code":"var _jsxFileName = \"/Users/stevie/Desktop/Code/RRRSS/src/App.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, useParams } from 'react-router-dom'; // Import useParams\nimport ItemList from './components/ItemList';\nimport ItemDetails from './components/ItemDetails';\nimport { fetchItems } from './services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [items, setItems] = useState([]);\n  useEffect(() => {\n    const fetchData = async () => {\n      try {\n        const data = await fetchItems();\n        setItems(data);\n      } catch (error) {\n        console.error('Error fetching items:', error);\n      }\n    };\n    fetchData();\n  }, []);\n  const handleUpdateItem = updatedItem => {\n    const updatedItems = items.map(item => item.id === updatedItem.id ? updatedItem : item);\n    setItems(updatedItems);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App container-sm\",\n    children: /*#__PURE__*/_jsxDEV(BrowserRouter, {\n      children: /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/\",\n          element: /*#__PURE__*/_jsxDEV(ItemList, {\n            items: items,\n            onUpdateItem: handleUpdateItem\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/feed_items/:id\",\n          element: /*#__PURE__*/_jsxDEV(ItemDetailsWrapper, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 60\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 9\n  }, this);\n};\n\n// Create a wrapper component to extract the id parameter using useParams\n_s(App, \"E85yb7BhBnl3/OpymRdjFiQJ97s=\");\n_c = App;\nconst ItemDetailsWrapper = () => {\n  _s2();\n  const {\n    id\n  } = useParams();\n  console.log('ID:', id);\n  return /*#__PURE__*/_jsxDEV(ItemDetails, {\n    itemId: id\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 12\n  }, this);\n};\n_s2(ItemDetailsWrapper, \"yQgCIz/jJfqV1l9s2yoba81MT5A=\", false, function () {\n  return [useParams];\n});\n_c2 = ItemDetailsWrapper;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"App\");\n$RefreshReg$(_c2, \"ItemDetailsWrapper\");","map":{"version":3,"names":["React","useState","useEffect","BrowserRouter","Routes","Route","useParams","ItemList","ItemDetails","fetchItems","jsxDEV","_jsxDEV","App","_s","items","setItems","fetchData","data","error","console","handleUpdateItem","updatedItem","updatedItems","map","item","id","className","children","path","element","onUpdateItem","fileName","_jsxFileName","lineNumber","columnNumber","ItemDetailsWrapper","_c","_s2","log","itemId","_c2","$RefreshReg$"],"sources":["/Users/stevie/Desktop/Code/RRRSS/src/App.jsx"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { BrowserRouter, Routes, Route, useParams } from 'react-router-dom'; // Import useParams\nimport ItemList from './components/ItemList';\nimport ItemDetails from './components/ItemDetails';\nimport { fetchItems } from './services/api';\n\nconst App = () => {\n    const [items, setItems] = useState([]);\n\n    useEffect(() => {\n        const fetchData = async () => {\n            try {\n                const data = await fetchItems();\n                setItems(data);\n            } catch (error) {\n                console.error('Error fetching items:', error);\n            }\n        };\n\n        fetchData();\n    }, []);\n\n    const handleUpdateItem = (updatedItem) => {\n        const updatedItems = items.map((item) =>\n            item.id === updatedItem.id ? updatedItem : item\n        );\n        setItems(updatedItems);\n    };\n\n    return (\n        <div className=\"App container-sm\">\n            <BrowserRouter>\n                <Routes>\n                    <Route\n                        path=\"/\"\n                        element={<ItemList items={items} onUpdateItem={handleUpdateItem} />}\n                    />\n                    {/* Use useParams to get the id parameter */}\n                    <Route path=\"/feed_items/:id\" element={<ItemDetailsWrapper />} />\n                </Routes>\n            </BrowserRouter>\n        </div>\n    );\n};\n\n// Create a wrapper component to extract the id parameter using useParams\nconst ItemDetailsWrapper = () => {\n    const { id } = useParams();\n    console.log('ID:', id);\n    return <ItemDetails itemId={id} />;\n};\n\nexport default App;\n\n\n\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}